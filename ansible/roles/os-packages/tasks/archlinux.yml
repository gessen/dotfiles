---
- block:
  - name: Install pacman packages
    command: 'pacman -S --noconfirm --needed {{ item }}'
    with_items:
      - '{{ packages_common | default([]) }}'
      - '{{ packages | default([]) }}'
    register: pacman_output
    changed_when: '"there is nothing to do" not in pacman_output.stdout'
    become: yes

  - name: Install pacman packages as dependencies
    command: 'pacman -S --noconfirm --needed --asdeps {{ item }}'
    with_items:
      - '{{ packages_common_asdeps | default([]) }}'
      - '{{ packages_asdeps | default([]) }}'
    register: pacman_output
    changed_when: '"there is nothing to do" not in pacman_output.stdout'
    become: yes

  when: with_pacman | default(False)

- block:
  - name: Create folders for own recipes
    file:
      path: '{{ aur_dst }}/{{ item.name }}'
      state: directory
    with_items:
      - '{{ packages_common_own | default([]) }}'
      - '{{ packages_own | default([]) }}'

  - name: Symlink own recipes
    file:
      path: '{{ aur_dst }}/{{ item[0].name }}/{{ item[1] }}'
      src: '{{ aur_src }}/{{ item[0].name }}/{{ item[1] }}'
      state: link
      force: yes
    with_subelements:
      - '{{ packages_common_own | default([]) + packages_own | default([]) }}'
      - files

  - name: Install own packages
    command: 'makepkg -si --noconfirm --needed'
    args:
      chdir: '{{ aur_dst }}/{{ item.name }}'
    with_items:
      - '{{ packages_common_own | default([]) }}'
      - '{{ packages_own | default([]) }}'
    register: makepkg_output
    changed_when: '"there is nothing to do" not in makepkg_output.stdout'

  - name: Create folders for AUR recipes
    file:
      path: '{{ aur_dst }}'
      state: directory
    with_items:
      - '{{ packages_common_aur | default([]) }}'
      - '{{ packages_aur | default([]) }}'

  - name: Clone AUR recipes
    git:
      repo: 'https://aur.archlinux.org/{{ item }}'
      dest: '{{ aur_dst }}/{{ item }}'
      clone: yes
      force: yes
      depth: 1
    with_items:
      - '{{ packages_common_aur | default([]) }}'
      - '{{ packages_aur | default([]) }}'

  - name: Install AUR packages
    command: 'makepkg -si --noconfirm --needed'
    args:
      chdir: '{{ aur_dst }}/{{ item }}'
    with_items:
      - '{{ packages_common_aur | default([]) }}'
      - '{{ packages_aur | default([]) }}'
    register: makepkg_output
    changed_when: '"there is nothing to do" not in makepkg_output.stdout'

  - name: Check if paru exists
    stat:
      path: /usr/bin/paru
    register: paru_installed

  - name: Install AUR packages with paru
    command: 'paru -S --noconfirm --needed {{ item }}'
    with_items:
      - '{{ packages_common_paru | default([]) }}'
      - '{{ packages_paru | default([]) }}'
    when:
      - paru_installed.stat.executable is defined
      - paru_installed.stat.executable
    register: paru_output
    changed_when: '"is up to date" not in paru_output.stdout'

  when: with_aur | default(False)

# Remap prefix from 'C-b' to 'C-s'
unbind-key C-b
set-option -g prefix C-s
bind-key C-s send-prefix

# Split panes using | and - with the current pane's path
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'
bind-key _ split-window -v -c '#{pane_current_path}'
unbind-key '"'
unbind-key %

# Switch panes using Alt-arrow without prefix
bind-key -n M-Left  select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up    select-pane -U
bind-key -n M-Down  select-pane -D
unbind-key Left
unbind-key Right
unbind-key Up
unbind-key Down
unbind-key o # select-pane -t :.+
unbind-key m # select-pane -m
unbind-key M # select-pane -M
# unbind-key "\;" # last-pane
unbind-key "t" # clock-mode

# Resize panes
bind-key -r C-Left  resize-pane -L 10
bind-key -r C-Right resize-pane -R 10
bind-key -r C-Up    resize-pane -U 5
bind-key -r C-Down  resize-pane -D 5
unbind-key M-Left
unbind-key M-Right
unbind-key M-Up
unbind-key M-Down

# Create new window using c with the current pane's path
bind-key c new-window -c '#{pane_current_path}'

# Switch windows using Ctrl-arrow without prefix
bind-key -n C-Right select-window -n
bind-key -n C-Left  select-window -p
unbind-key n   # next-window
unbind-key p   # previous-window
unbind-key M-n # next-window -a
unbind-key M-p # previous-window -a
unbind-key l   # last-window

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Enable mouse mode
set-option -g mouse on

# Reload config file
bind-key C-r source-file ~/.tmux.conf

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"
unbind "\$" # rename-session
unbind ,    # rename-window

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind-key C-u command-prompt -p "Session to merge with: " \
  "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind-key d detach
bind-key D if -F '#{session_many_attached}' \
  'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
  'display "Session has only 1 client attached"'

# Double LMB Select & Copy (Word)
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xsel -i --clipboard"

# Triple LMB Select & Copy (Line)
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    send-keys -X copy-pipe "xsel -i --clipboard"

# Use xterm escape sequences with clipboard
set-option -g set-clipboard on

# Use emacs style navigation inside tmux
set-option -g mode-keys emacs

# Use emacs style navigation inside status line
set-option -g status-keys emacs

# Change index to 1 for windows and panes
set-option -g base-index 1
set-option -g pane-base-index 1

# Automatically set window title
set-option -g automatic-rename on
set-option -g set-titles on

# Set parent terminal title to reflect current window in tmux session
set-option -g set-titles-string "#I:#W"

# Renumber windows when a window is closed
set-option -g renumber-windows on

# No delay for escape key press
set-option -g escape-time 0

# Time for which status line messages are displayed
set-option -g display-time 1000

# Windows with activity are highlighted in the status line
set-option -g monitor-activity on

# Status bar
set-option -g status on
set-option -g status-position bottom
set-option -g status-justify left
set-option -g status-left-length 50
set-option -g status-right-length 50
set-option -g status-fg colour231
set-option -g status-bg colour234
set-option -g status-left  '#[fg=colour235,bg=colour252,bold] #{?client_prefix,⌨,❐} #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #h #[fg=colour238,bg=colour234,nobold]'
set-option -g status-right '#[fg=colour238,bg=colour234,nobold]#[fg=colour245,bg=colour238,bold]%H:%M'

# Redraw status line every 60 seconds
set-option -g status-interval 60

# Pane status bar
set-option -g pane-active-border-fg colour39
set-option -g pane-border-fg colour243

# Window status bar
set-option -g window-status-format         "#[fg=colour244,bg=colour234] #I #[fg=colour240] #[default]#W "
set-option -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
set-option -g window-status-last-fg colour31
set-option -g window-status-fg colour249
set-option -g window-status-bg colour234
set-option -g window-status-activity-attr none
set-option -g window-status-activity-fg yellow
set-option -g window-status-bell-attr none
set-option -g window-status-bell-fg red
set-option -g window-status-current-fg colour31
set-option -g window-status-current-bg colour231
set-option -g window-status-current-attr bold

# Modes
set-option -g mode-attr bold
set-option -g mode-fg colour255
set-option -g mode-bg colour31

# Messages
set-option -g message-fg colour255
set-option -g message-bg colour31
set-option -g message-attr bold

# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'tmux-plugins/tmux-continuum'
set-option -g @plugin 'tmux-plugins/tmux-fpp'
set-option -g @plugin 'tmux-plugins/tmux-copycat'
set-option -g @plugin 'tmux-plugins/tmux-yank'

set-option -g @resurrect-save 'S'
set-option -g @resurrect-restore 'R'
set-option -g @resurrect-capture-pane-contents 'on'

set-option -g @continuum-restore 'on'

set-option -g @yank_selection_mouse 'clipboard'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/.tmux/plugins/tpm/tpm'

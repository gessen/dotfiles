# Set XDG dir vars
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-$HOME/.cache}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"

# History limits
export HISTSIZE=1000000
export SAVEHIST=1000000

# Set both EDITOR and VISUAL to emacsclient with autostarted server
export EDITOR="emacsclient --tty"
export VISUAL="$EDITOR"

# Default less options
LESS="--quit-at-eof"
LESS="--quit-if-one-screen $LESS"
LESS="--ignore-case $LESS"
LESS="--LONG-PROMPT $LESS"
LESS="--RAW-CONTROL-CHARS $LESS"
LESS="--no-init $LESS"
LESS="--hilite-unread $LESS"
LESS="--window=-4 $LESS"
LESS="--shift 5 $LESS"
LESS="--squeeze-blank-lines $LESS"
export LESS

# Do not save less search history in ~/.lesshst
export LESSHISTFILE="-"

# Use bat as MANPAGER
export MANPAGER="sh -c 'col -b | bat -l man -p'"

# New quasi-$HOME
export FP="${HOME}/Workspace"

# emacsclient starts emacs in daemon mode if it can't connect to it
export ALTERNATE_EDITOR=''

# Conform (partially) to XDG with aspell
export ASPELL_CONF="home-dir /home/jswierk/.config/aspell/; per-conf aspell.conf"

# Conform to XDG with cargo
export CARGO_HOME="${XDG_DATA_HOME}/cargo"

# Conform to XDG with ccache
export CCACHE_CONFIGPATH="${XDG_CONFIG_HOME}/ccache/config"
export CCACHE_DIR="${XDG_CACHE_HOME}/ccache"

# By default, use nproc number of threads
export CMAKE_BUILD_PARALLEL_LEVEL=$(nproc)

# Generates compile_commands.json by default
export CMAKE_EXPORT_COMPILE_COMMANDS=ON

# Use Ninja by default
export CMAKE_GENERATOR=Ninja

# Use sccache by default
export CMAKE_C_COMPILER_LAUNCHER="sccache"
export CMAKE_CXX_COMPILER_LAUNCHER="sccache"

# Output should be logged for failed tests
export CTEST_OUTPUT_ON_FAILURE=ON

# Report CTest progress by repeatedly updating the same line
export CTEST_PROGRESS_OUTPUT=ON

# Conform to XDG with fasd cache
export _FASD_DATA="${XDG_CACHE_HOME}/fasd"

# Set fd as the default source for fzf
export FZF_DEFAULT_COMMAND="fd \
--hidden \
--no-ignore \
--follow \
--exclude='.git/' \
--exclude='5g-jabco-w5-*/' \
--exclude='5g-poco-mk4-hf/' \
--exclude='simics-mars/' \
--exclude='hycon-mars/' \
--exclude='thor/' \
--exclude='nahka/' \
--exclude='made/' \
--exclude='stratix10-azqp/' \
--exclude='ct-made/' \
--exclude='ct-zynqmp/' \
--exclude='host-64/' \
--exclude='qemux86-64/' \
"

# Default fzf options
export FZF_DEFAULT_OPTS=" \
--height=60% \
--bind alt-p:preview-up,alt-n:preview-down \
--bind ctrl-alt-p:preview-half-page-up,ctrl-alt-n:preview-half-page-down \
--bind alt-up:preview-half-page-up,alt-down:preview-half-page-down \
--bind ctrl-v:half-page-down,alt-v:half-page-up \
--bind alt-a:select-all,ctrl-alt-a:deselect-all,alt-t:toggle-all \
"

# Use fd for CTRL-T
export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"

# Use fd for ALT-C with preview
export FZF_ALT_C_COMMAND="${FZF_DEFAULT_COMMAND} --type directory"
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

# Open CTRL-T, CTRL-R and ALT-C in tmux-pane
export FZF_TMUX=1
export FZF_TMUX_HEIGHT=40%

# Conform to XDG with GnuPG
export GNUPGHOME="${XDG_DATA_HOME}/gnupg"

# Always show colours
export GTEST_COLOR=1

# Conform to XDG with GTK 2
export GTK2_RC_FILES="${XDG_CONFIG_HOME}/gtk-2.0/settings.ini"

# Include the current load to the ninja status
export NINJA_STATUS="[%s/%f/%t] (j%r/%e) "

# Conform to XDG with pyenv
export PYENV_ROOT="${XDG_DATA_HOME}/pyenv"

# Use persistent configuration file for ripgrep
export RIPGREP_CONFIG_PATH="${XDG_CONFIG_HOME}/ripgrep/config"

# Conform to XDG with rustup
export RUSTUP_HOME="${XDG_DATA_HOME}/rustup"

# Conform to XDG with vode
export VSCODE_EXTENSIONS="${XDG_DATA_HOME}/code/extensions"

# Add LinSEE mixtures to be visible
export LINSEE_MIXTURES_PATH="/home/rfscm/rf_mixtures:$LINSEE_MIXTURES_PATH"

# Needed by python
export LD_LIBRARY_PATH="${FP}/.local/lib"

# Set base $PATH
export PATH="/opt/EE_LinSEE/bin:/usr/local/bin:/usr/bin:/bin:/sbin"

# Add custom binaries to $PATH
export PATH="${FP}/.local/bin:${PATH}"

# Add pyenv to $PATH
export PATH="${PYENV_ROOT}/bin:${PATH}"

# Add cargo to $PATH
export PATH="${CARGO_HOME}/bin:${PATH}"

# Relocate pkg-config to ${FP}/.local
export PKG_CONFIG_PATH="${FP}/.local/lib/pkgconfig:${FP}/.local/share/pkgconfig"

# Run pyenv init to set PATH
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
fi
